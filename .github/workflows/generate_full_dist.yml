name: Generate and Commit All Distribution Files

on:
  workflow_dispatch:
  push:
    branches:
      - main

concurrency:
  group: "full_dist"
  cancel-in-progress: false

permissions:
  contents: write
  pull-requests: write

jobs:
  generate_locales:
    runs-on: ubuntu-latest
    outputs:
      LOCALES: ${{ steps.retrieve_locales.outputs.locales }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Retrieve Locales
        id: retrieve_locales
        run: |
          locales=$(ls data/localizations/categories/ | grep -Eo '^[a-z]{2,3}' | uniq | xargs)
          locales_json=$(echo -n "["; for locale in $locales; do echo -n "\"$locale\","; done | sed 's/,$//'; echo -n "]")
          echo "locales=$locales_json" >> $GITHUB_OUTPUT

  generate_distribution_files:
    needs: generate_locales
    runs-on: ubuntu-latest
    strategy:
      matrix:
        locale: ${{ fromJson(needs.generate_locales.outputs.LOCALES) }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Ruby
        uses: ruby/setup-ruby@v1

      - name: Install Cue
        uses: cue-lang/setup-cue@v1.0.0
        with:
          version: 'v0.7.0'

      - name: Install Bundler and Gems
        run: |
          gem install bundler
          bundle install --jobs 4 --retry 3

      - name: Generate Distribution Files
        run: make VERBOSE=1 LOCALES=${{ matrix.locale }}

      - name: Upload distribution files
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.locale }}
          path: dist/${{ matrix.locale }}

  create_pull_request:
    needs: generate_distribution_files
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set LOCALES environment variable
        run: echo "LOCALES=${{ needs.generate_locales.outputs.LOCALES }}" >> $GITHUB_ENV

      - name: Download artifacts
        uses: actions/download-artifact@v4
        with:
          path: dist
      - name: Display structure of downloaded files
        run: ls -R dist

      - name: Set up short SHA
        id: short_sha
        run: echo "sha=$(git rev-parse --short ${{ github.sha }})" >> $GITHUB_OUTPUT

      - name: Get last committer username
        id: last_committer
        run: |
          LAST_COMMIT_SHA=$(git log -1 --pretty=format:'%H')
          API_URL="https://api.github.com/repos/${{ github.repository }}/commits/${LAST_COMMIT_SHA}"
          COMMITTER_LOGIN=$(curl -s -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" $API_URL | jq -r '.committer.login')
          echo "username=$COMMITTER_LOGIN" >> $GITHUB_OUTPUT
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Commit changes and create PR
        uses: peter-evans/create-pull-request@v6
        with:
          commit-message: "ðŸ¤– Update localization files for ${{ github.sha }}"
          branch: "localization-dist"
          branch-suffix: short-commit-hash
          title: "ðŸ¤– Update localization files for ${{ steps.short_sha.outputs.sha }}"
          body: |
            Update `dist/` localization files. Triggered by ${{ steps.short_sha.outputs.sha }}.
            cc @${{ steps.last_committer.outputs.username }}
          labels: automated-pr, localization
          assignees: ${{ steps.last_committer.outputs.username }}
