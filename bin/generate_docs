#!/usr/bin/env ruby
# frozen_string_literal: true

require_relative "../config/environment"
require_relative "../config/cli"
require_relative "../lib/docs/mappings"

UNSTABLE = "unstable"

mappings = Docs::Mappings.new

cli = CLI.new([:version]) do |opts|
  opts.on("-V VERSION", "--version=VERSION", "Version of the documentation")
end
cli.parse!(ARGV)
cli.options.version ||= UNSTABLE
cli.options.force = true if cli.options.version == UNSTABLE # we want unstable to always update

puts("Generating `#{cli.options.version}` documentation files...")
cli.options_status

taxonomy_data = cli.parse_json("dist/en/taxonomy.json")
category_data = taxonomy_data.fetch("verticals")
mappings_json = cli.parse_json("dist/en/integrations/all_mappings.json").fetch("mappings")
mappings_data = mappings.reverse_shopify_mapping_rules(mappings_json)

DATA_TARGET = "docs/_data/#{cli.options.version}"
cli.write_file("#{DATA_TARGET}/sibling_groups.yml") do |file|
  file.write(Category.as_json_for_docs_siblings(category_data).to_yaml(line_width: 1000))
  file.write("\n")
end
cli.write_file("#{DATA_TARGET}/search_index.json") do |file|
  file.write(JSON.fast_generate(Category.as_json_for_docs_search(category_data)))
  file.write("\n")
end
cli.write_file("#{DATA_TARGET}/attributes.yml") do |file|
  file.write(Attribute.as_json_for_docs.to_yaml(line_width: 1000))
  file.write("\n")
end
cli.write_file("#{DATA_TARGET}/mappings.yml") do |file|
  file.write(mappings_data.to_yaml(line_width: 1000))
  file.write("\n")
end

unless cli.options.version == UNSTABLE
  cli.write_file("docs/_releases/#{cli.options.version}.html") do |file|
    content = cli.read_file("docs/_releases/_template.html")
    content.gsub!("TITLE", cli.options.version.upcase)
    content.gsub!("TARGET", cli.options.version)
    content.gsub!("GH_URL", "https://github.com/Shopify/product-taxonomy/releases/tag/v#{cli.options.version}")

    file.write(content)
  end
end
