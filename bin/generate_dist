#!/usr/bin/env ruby
# frozen_string_literal: true

require_relative "../application"
require_relative "../lib/cli"

cli = CLI.new([:version]) do |opts|
  opts.on("-V VERSION", "--version=VERSION", "Version of the documentation")
end
cli.parse!(ARGV)
cli.options.version ||= cli.read_file("VERSION").strip

puts("Generating `#{cli.options.version}` distribution files...")
cli.options_status

Application.establish_db_connection!

text_serializer = Dist::TextSerializer.new(
  verticals: Category.verticals,
  properties: Property.all,
  values: PropertyValue.all,
  version: cli.options.version,
)
cli.write_file!("dist/categories.txt") do |file|
  file.write(text_serializer.categories)
  file.write("\n")
end
cli.write_file!("dist/attributes.txt") do |file|
  file.write(text_serializer.attributes)
  file.write("\n")
end
cli.write_file!("dist/attribute_values.txt") do |file|
  file.write(text_serializer.values)
  file.write("\n")
end

json_serializer = Dist::JSONSerializer.new(
  verticals: Category.verticals,
  properties: Property.all,
  mapping_rules: MappingRule.all,
  version: cli.options.version,
)
cli.write_file!("dist/taxonomy.json") do |file|
  file.write(json_serializer.taxonomy)
  file.write("\n")
end
cli.write_file!("dist/categories.json") do |file|
  file.write(json_serializer.categories)
  file.write("\n")
end
cli.write_file!("dist/attributes.json") do |file|
  file.write(json_serializer.attributes)
  file.write("\n")
end
cli.write_file!("dist/mappings.json") do |file|
  file.write(json_serializer.mappings)
  file.write("\n")
end
